name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  setup-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install and build front-end
        working-directory: ./front
        run: |
          npm install
          npm run build

      - name: Clean and build API
        working-directory: ./api
        run: |
          rm -rf node_modules package-lock.json
          npm install --legacy-peer-deps
          npm run build

  docker:
    runs-on: ubuntu-latest
    needs: setup-and-build
    steps:
      - name: Install Docker Compose
        run: |
          COMPOSE_VERSION="v2.27.0"
          sudo curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build and push Docker images
        run: |
          docker-compose build
          docker-compose push

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            DEPLOY_DIR=~/api
            mkdir -p "$DEPLOY_DIR" && cd "$DEPLOY_DIR"
            git pull origin main || exit 10
            sudo docker-compose down -v || exit 20
            sudo docker-compose pull || exit 30
            sudo docker-compose up -d || exit 40
