name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies and build front
        working-directory: ./front
        run: |
          npm install
          npm run build

      - name: Clean install dependencies for api
        working-directory: ./api
        run: |
          rm -rf node_modules
          rm package-lock.json
          npm install --legacy-peer-deps
          npm run build

      - name: Run linter for front
        working-directory: ./front
        run: |
          npm run lint

      # Comment or remove the following lines to disable the linter for api
      # - name: Run linter for api
      #   working-directory: ./api
      #   run: |
      #     npm run lint

      - name: Build and push Docker images
        run: |
          docker-compose build
          docker-compose push

  test_database:
    needs: build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: mydb
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build the Docker test image
        run: docker build -t myapp-test -f test/Dockerfile .

      - name: Run the test
        run: docker run --network host myapp-test
        env:
          POSTGRES_DB: mydb
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_HOST: localhost

  deploy:
    needs: test_database
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            mkdir -p ~/api && cd ~/api    
            if [ ! -d .git ]; then
              git clone https://github.com/Florence-Martin/Test_CI_CD.git .
            fi
            git pull origin main          
            CONTAINER_NAME="test_ci_cd-db-$(date +%s)"
            export CONTAINER_NAME
            sudo docker-compose -f ./docker-compose.yml down 
            sudo docker-compose -f ./docker-compose.yml up -d --build
